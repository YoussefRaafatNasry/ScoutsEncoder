<Window x:Class="WindowsApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:views="clr-namespace:WindowsApp.Views"
        xmlns:viewModels="clr-namespace:WindowsApp.ViewModels"

        Title="ScoutsEncoder"
        Height="720" MinHeight="600"
        Width="1024" MinWidth="504"
        WindowStartupLocation="CenterScreen"
        
        FontFamily="{DynamicResource MaterialDesignFont}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}">

    <Window.DataContext>
        <viewModels:MainViewModel />
    </Window.DataContext>

    <materialDesign:DialogHost x:Name="DialogHost" CloseOnClickAway="True" IsOpen="{Binding IsDialogHostOpen}">

        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>


            <!-- Input -->

            <materialDesign:Card Padding="16" Margin="16" VerticalAlignment="Stretch">

                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <TextBox x:Name="InputTextBox"
                             Margin="0 0 0 16"
                             Text="{Binding Cipher.PlainText, UpdateSourceTrigger=PropertyChanged}"
                             FontFamily="Courier New"
                             FontSize="14"
                             AcceptsReturn="True"
                             FlowDirection="RightToLeft"
                             Block.LineHeight="4"
                             VerticalContentAlignment="Top"
                             VerticalScrollBarVisibility="Hidden"
                             TextWrapping="Wrap"
                             materialDesign:HintAssist.Hint="أدخل النص هنا..."
                             SelectionChanged="MirrorSelectionEventHandler" />

                    <Button x:Name="InputClearButton"
                            Grid.Row="0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            Width="24"
                            Height="24"
                            Background="{DynamicResource MaterialDesignPaper}"
                            ToolTip="Clear Input"
                            ToolTipService.InitialShowDelay="1200"
                            Command="{Binding ClearInput}">
                        <materialDesign:PackIcon Kind="Close" Width="12" />
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignIconForegroundButton}">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=InputTextBox}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=InputClearButton}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ToolBarTray Grid.Row="1" IsLocked="True" Background="Transparent">

                        <ToolBar Style="{DynamicResource MaterialDesignToolBar}"
                                 Background="Transparent">

                            <StackPanel Orientation="Horizontal" Margin="16 0">
                                <materialDesign:PackIcon Margin="0 0 12 0" VerticalAlignment="Center" Kind="Language" />
                                <ComboBox x:Name="CiphersComboBox"
                                          Width="90"
                                          DisplayMemberPath="Name"
                                          ItemsSource="{Binding Ciphers}"
                                          SelectedItem="{Binding Cipher.Model}"
                                          SelectedIndex="{Binding CipherIndex}"
                                          FlowDirection="RightToLeft"
                                          materialDesign:HintAssist.Hint="الشفرة" />
                            </StackPanel>

                            <Button x:Name="AddNewCipherButton"
                                    ToolTip="Add new custom cipher"
                                    ToolTipService.InitialShowDelay="1200"
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}">
                                <Button.CommandParameter>
                                    <views:NewCipherDialog x:Name="NewCipherDialog" />
                                </Button.CommandParameter>
                                <materialDesign:PackIcon Kind="Add" />
                            </Button>

                            <StackPanel Orientation="Horizontal" Margin="16 0">
                                <materialDesign:PackIcon Margin="0 0 12 0" VerticalAlignment="Center" Kind="Gear" />
                                <ComboBox x:Name="StandardsComboBox"
                                          Width="64"
                                          DisplayMemberPath="Name"
                                          ItemsSource="{Binding Cipher.Sets}"
                                          SelectedIndex="{Binding Cipher.SetIndex, UpdateSourceTrigger=LostFocus}"
                                          IsEnabled="{Binding Cipher.HasSets}"
                                          FlowDirection="RightToLeft"
                                          materialDesign:HintAssist.Hint="النسخة" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="16 0">
                                <materialDesign:PackIcon Margin="0 0 12 0" VerticalAlignment="Center" Kind="Key" />
                                <ComboBox x:Name="KeysComboBox"
                                          Width="64"
                                          ItemsSource="{Binding Cipher.Keys}"
                                          SelectedIndex="{Binding Cipher.KeyIndex, UpdateSourceTrigger=LostFocus}"
                                          IsEnabled="{Binding Cipher.HasKeys}"
                                          FlowDirection="RightToLeft"
                                          materialDesign:HintAssist.Hint="المفتاح" />
                            </StackPanel>

                            <Separator />

                            <Button x:Name="DetailsButton"
                                    ToolBar.OverflowMode="Never"
                                    ToolTip="Show Encoding Key"
                                    ToolTipService.InitialShowDelay="1200"
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}">
                                <Button.CommandParameter>
                                    <views:CipherDetailsDialog />
                                </Button.CommandParameter>
                                <materialDesign:PackIcon Kind="ReadMore" />
                            </Button>

                        </ToolBar>

                    </ToolBarTray>

                </Grid>

            </materialDesign:Card>


            <!-- Output -->

            <materialDesign:Card Grid.Row="1" Padding="16" Margin="16 0 16 16" VerticalAlignment="Stretch">

                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <RichTextBox x:Name="OutputRichTextBox"
                                 Margin="0 0 0 16"
                                 FontFamily="Courier New"
                                 FontSize="14"
                                 AcceptsReturn="True"
                                 FlowDirection="RightToLeft"
                                 Block.LineHeight="4"
                                 VerticalContentAlignment="Top"
                                 VerticalScrollBarVisibility="Hidden"
                                 IsReadOnly="True">
                        <FlowDocument>
                            <Paragraph>
                                <Run x:Name="OutputRun" Text="{Binding Cipher.EncodedText, Mode=OneWay}" />
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>

                    <Button x:Name="OutputClearButton"
                            Grid.Row="0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            Width="24"
                            Height="24"
                            Background="{DynamicResource MaterialDesignPaper}"
                            ToolTip="Copy Output"
                            ToolTipService.InitialShowDelay="1200"
                            Command="{Binding CopyOutput}">
                        <materialDesign:PackIcon Kind="ContentCopy" Width="12" />
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignIconForegroundButton}">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=OutputRichTextBox}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=OutputClearButton}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ToolBarTray Grid.Row="1" IsLocked="True" Background="Transparent">

                        <ToolBar Style="{DynamicResource MaterialDesignToolBar}"
                                 Background="Transparent">

                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="16 0 8 0">

                                <TextBlock FontSize="10">
                                    Characters<LineBreak/>Separator
                                </TextBlock>

                                <TextBox x:Name="CharsDelimiterTextBox"
                                         Width="32"
                                         Margin="12 0"
                                         TextAlignment="Center"
                                         Text="{Binding Cipher.CharsDelimiter, UpdateSourceTrigger=PropertyChanged}"
                                         ToolTip="Symbol to separate encoded characters"
                                         ToolTipService.InitialShowDelay="1200" />

                            </StackPanel>

                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="8 0 16 0">

                                <TextBlock FontSize="10">
                                    Words<LineBreak/>Separator
                                </TextBlock>

                                <TextBox x:Name="WordsDelimiterTextBox"
                                         Width="32"
                                         Margin="12 0"
                                         TextAlignment="Center"
                                         Text="{Binding Cipher.WordsDelimiter, UpdateSourceTrigger=PropertyChanged}"
                                         ToolTip="Symbol to separate encoded words"
                                         ToolTipService.InitialShowDelay="1200"/>

                            </StackPanel>

                            <Separator />

                            <Button x:Name="ExportAudioButton"
                                    ToolBar.OverflowMode="Never"
                                    ToolTip="Export Audio"
                                    ToolTipService.InitialShowDelay="1200"
                                    IsEnabled="{Binding Cipher.IsAudible}"
                                    Command="{Binding ExportAudio}">
                                <materialDesign:PackIcon Kind="Audio" />
                            </Button>

                            <ComboBox x:Name="AudioSpeedComboBox"
                                      Width="64"
                                      Margin="8 0 16 0"
                                      ItemsSource="{Binding Speeds}"
                                      SelectedIndex="{Binding SpeedIndex}"
                                      ToolBar.OverflowMode="Never"
                                      ToolTip="Audio Speed"
                                      ToolTipService.InitialShowDelay="1200"
                                      IsEnabled="{Binding Cipher.IsAudible}" />

                        </ToolBar>

                    </ToolBarTray>

                </Grid>

            </materialDesign:Card>


            <!-- Footer -->

            <views:Footer Grid.Row="2" />


            <!-- Snackbar -->

            <materialDesign:Snackbar x:Name="Snackbar" Grid.Row="2" MessageQueue="{Binding MessageQueue}" />

        </Grid>


    </materialDesign:DialogHost>

</Window>
